<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7D9R6wfb5/g6xvCPc/PHYfqPWD7fP8HWN4R7n547D9R6wfb5/g6xvCPc/PHYfqPWD7fP8HWN4R7n547D
        9R6wfb5/g6xvCPc/PHYfqPWD7fP8HWN4R7n547D9R6wfb5/g6xvCPc/PHYfqPWD7fP8AB1jeEe5+eOw/
        UesH2+f4Osbwj3Pzx2H6j1g+3z/B1jeEe5+eOw/UesH2+f4Osbwj3Pzx2H6j1g+3z/B1jeEe5+eOw/Ue
        sH2+f4Osbwj3Pzx2H6j1g+3z/B1jeEe5+eOw/UesH2+f4Osbwj3Pzx2H6j1g+3z/AAdY3hHufnjsP1Hr
        B9vn+DrG8I9z88dh+o9YPt8/wdY3hHufnjsP1HrB9vn+DrG8I9z88dh+o9YPt8/wqu4YXzxBtyUgD5CW
        P8o7D9TE/wD6Dhb5/h1eFw600WmgsqgAcw/rO6mmKYyhQXbtV2ua6tsssyjICAgICAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
        CAgICAgICAgf/9k=
</value>
  </data>
</root>